name: Check Package Version Bumped

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  version-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Install jq
        run: sudo apt-get install jq

      - name: Get previous version from package.json
        id: prev
        run: |
          PREV_VERSION=$(git show HEAD^:package.json | jq -r .version)
          echo "prev_version=$PREV_VERSION" >> $GITHUB_OUTPUT
          echo "Previous version: $PREV_VERSION"

      - name: Get current version from package.json
        id: curr
        run: |
          CURR_VERSION=$(jq -r .version package.json)
          echo "curr_version=$CURR_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURR_VERSION"

      - name: Get version from public/version.js
        id: public_ver
        run: |
          PUBLIC_VERSION=$(jq -r .version public/version.js)
          echo "public_version=$PUBLIC_VERSION" >> $GITHUB_OUTPUT
          echo "Public version: $PUBLIC_VERSION"

      - name: Compare package.json version has been bumped
        run: |
          echo "Checking if package.json version has been bumped..."
          if [ "${{ steps.curr.outputs.curr_version }}" = "${{ steps.prev.outputs.prev_version }}" ]; then
            echo "Error: Package version was not bumped (still ${{ steps.curr.outputs.curr_version }})"
            exit 1
          else
            echo "Package version bumped from ${{ steps.prev.outputs.prev_version }} to ${{ steps.curr.outputs.curr_version }}."
          fi

      - name: Verify public version matches package.json
        run: |
          echo "Comparing package.json version '${{ steps.curr.outputs.curr_version }}' with public version '${{ steps.public_ver.outputs.public_version }}'"
          if [ "${{ steps.curr.outputs.curr_version }}" != "${{ steps.public_ver.outputs.public_version }}" ]; then
            echo "Error: Version in public/version.js does not match version in package.json"
            exit 1
          else
            echo "Version in public/version.js matches package.json"
          fi
