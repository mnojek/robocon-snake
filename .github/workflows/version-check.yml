name: Version Check

on:
  pull_request:
    branches: [ main ]

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install semver
        run: npm install semver
      
      - name: Check PR branch versions match
        id: pr_version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          VERSION_JS=$(node -p "require('./../version.js')")
          
          if [ "$PACKAGE_VERSION" != "$VERSION_JS" ]; then
            echo "Version mismatch in PR branch!"
            echo "package.json version: $PACKAGE_VERSION"
            echo "version.js version: $VERSION_JS"
            exit 1
          fi
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
      
      - name: Get target branch version
        id: target_version
        run: |
          git checkout origin/${{ github.base_ref }}
          TARGET_VERSION=$(node -p "require('./package.json').version")
          echo "version=$TARGET_VERSION" >> $GITHUB_OUTPUT
      
      - name: Compare with target branch version
        run: |
          IS_HIGHER=$(node -p "require('semver').gt('${{ steps.pr_version.outputs.version }}', '${{ steps.target_version.outputs.version }}')")
          
          if [ "$IS_HIGHER" != "true" ]; then
            echo "Error: New version (${{ steps.pr_version.outputs.version }}) must be higher than target branch version (${{ steps.target_version.outputs.version }})"
            exit 1
          fi
          
          echo "Version check passed:"
          echo "- PR version: ${{ steps.pr_version.outputs.version }}"
          echo "- Target version: ${{ steps.target_version.outputs.version }}"
